class PriorityQueue {  
  constructor() {
    this.collection = [];
  }
  printCollection() {
    console.log(this.collection);
  }
  enqueue(el) {
    return this.collection.push(el);
  }
  findPriority() {
    let priority = Math.min.apply(null, this.collection.map(function(keys) {
      return keys[1];
    }));
    return this.collection.find(el => el[1] == priority);
  }
  dequeue() {
    let item = this.findPriority()
    this.collection.splice(this.collection.indexOf(item), 1)
    return item[0]

  }
  size() {
    return this.collection.length;
  }
  isEmpty() {
    return this.collection.length == 0;
  }
}
